{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/files-service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nfunction HomeComponent_tr_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\")(2, \"span\", 7);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"td\")(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const file_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", file_r2.filename, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", file_r2.length, \" \");\n  }\n}\nexport class HomeComponent {\n  constructor(filesService) {\n    this.filesService = filesService;\n    this.files = [];\n  }\n  ngOnInit() {\n    this.loadFiles();\n  }\n  uploadFile(event) {\n    const input = event.target;\n    if (input.files && input.files.length) {\n      this.filesService.uploadFiles(input.files).subscribe(_ => this.loadFiles());\n    }\n  }\n  openFileChooser(fileInput) {\n    fileInput.click();\n  }\n  loadFiles() {\n    this.filesService.getFiles().subscribe(files => {\n      this.files = files;\n    });\n  }\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.FilesHttpService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 16,\n  vars: 1,\n  consts: [[1, \"form-group\"], [\"type\", \"file\", \"id\", \"file\", \"multiple\", \"\", \"hidden\", \"\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"btn\", \"btn-primary\", 3, \"click\"], [2, \"margin-top\", \"50px\"], [1, \"table\"], [4, \"ngFor\", \"ngForOf\"], [1, \"m-0\", \"p-0\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r3 = i0.ɵɵgetCurrentView();\n      i0.ɵɵelementStart(0, \"form\")(1, \"div\", 0)(2, \"input\", 1, 2);\n      i0.ɵɵlistener(\"change\", function HomeComponent_Template_input_change_2_listener($event) {\n        return ctx.uploadFile($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"button\", 3);\n      i0.ɵɵlistener(\"click\", function HomeComponent_Template_button_click_4_listener() {\n        i0.ɵɵrestoreView(_r3);\n        const _r0 = i0.ɵɵreference(3);\n        return i0.ɵɵresetView(ctx.openFileChooser(_r0));\n      });\n      i0.ɵɵtext(5, \"Upload files\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"h3\", 4);\n      i0.ɵɵtext(7, \"All files\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"table\", 5)(9, \"thead\")(10, \"td\");\n      i0.ɵɵtext(11, \"Name\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"td\");\n      i0.ɵɵtext(13, \"Length\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(14, \"tbody\");\n      i0.ɵɵtemplate(15, HomeComponent_tr_15_Template, 7, 2, \"tr\", 6);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"ngForOf\", ctx.files);\n    }\n  },\n  dependencies: [i2.NgForOf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm],\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;;IAeIA,0BAA+B;IAGzBA,YACF;IAAAA,iBAAO;IAGTA,0BAAI;IAEAA,YACF;IAAAA,iBAAI;;;;IAPFA,eACF;IADEA,iDACF;IAKEA,eACF;IADEA,+CACF;;;ACjBR,OAAM,MAAOC,aAAa;EAIxBC,YAAoBC,YAA8B;IAA9B,iBAAY,GAAZA,YAAY;IAFzB,UAAK,GAAe,EAAE;EAEyB;EAEtDC,QAAQ;IACN,IAAI,CAACC,SAAS,EAAE;EAClB;EAEAC,UAAU,CAACC,KAAY;IACrB,MAAMC,KAAK,GAAGD,KAAK,CAACE,MAA0B;IAC9C,IAAID,KAAK,CAACE,KAAK,IAAIF,KAAK,CAACE,KAAK,CAACC,MAAM,EAAE;MACrC,IAAI,CAACR,YAAY,CAACS,WAAW,CAACJ,KAAK,CAACE,KAAK,CAAC,CACvCG,SAAS,CAACC,CAAC,IAAI,IAAI,CAACT,SAAS,EAAE,CAAC;;EAEvC;EAEAU,eAAe,CAACC,SAA2B;IACzCA,SAAS,CAACC,KAAK,EAAE;EACnB;EAEAZ,SAAS;IACP,IAAI,CAACF,YAAY,CAACe,QAAQ,EAAE,CACzBL,SAAS,CAACH,KAAK,IAAG;MACjB,IAAI,CAACA,KAAK,GAAGA,KAAK;IACpB,CAAC,CAAC;EACN;;AA3BWT,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAkB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;MDR1BvB,4BAAM;MAEoCA;QAAA,OAAUwB,sBAAkB;MAAA,EAAC;MAAnExB,iBAAwF;MACxFA,iCAAqE;MAArCA;QAAAA;QAAA;QAAA,OAASA,uCAA0B;MAAA,EAAC;MAACA,4BAAY;MAAAA,iBAAS;MAI9FA,6BAA6B;MAAAA,yBAAS;MAAAA,iBAAK;MAC3CA,gCAAqB;MAEbA,qBAAI;MAAAA,iBAAK;MACbA,2BAAI;MAAAA,uBAAM;MAAAA,iBAAK;MAEjBA,8BAAO;MAELA,8DAYK;MACPA,iBAAQ;;;MAbeA,gBAAQ;MAARA,mCAAQ","names":["i0","HomeComponent","constructor","filesService","ngOnInit","loadFiles","uploadFile","event","input","target","files","length","uploadFiles","subscribe","_","openFileChooser","fileInput","click","getFiles","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/kirillbiliashov/Projects/FilesApp/ClientApp/src/app/home/home.component.html","/Users/kirillbiliashov/Projects/FilesApp/ClientApp/src/app/home/home.component.ts"],"sourcesContent":["<form>\r\n  <div class=\"form-group\">\r\n    <input type=\"file\" id=\"file\" multiple (change)=\"uploadFile($event)\" hidden #fileInput />\r\n    <button class=\"btn btn-primary\" (click)=\"openFileChooser(fileInput)\">Upload files</button>\r\n  </div>\r\n</form>\r\n\r\n<h3 style=\"margin-top: 50px\">All files</h3>\r\n<table class=\"table\">\r\n  <thead>\r\n    <td>Name</td>\r\n    <td>Length</td>\r\n  </thead>\r\n  <tbody>\r\n\r\n    <tr *ngFor=\"let file of files\">\r\n      <td>\r\n        <span class=\"m-0 p-0\">\r\n          {{file.filename}}\r\n        </span>\r\n\r\n      </td>\r\n      <td>\r\n        <p>\r\n          {{file.length}}\r\n        </p>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>","import { Component, OnInit } from '@angular/core';\r\nimport { FilesHttpService } from '../services/files-service';\r\nimport { UserFile } from '../models/user-file';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  public files: UserFile[] = [];\r\n\r\n  constructor(private filesService: FilesHttpService) { }\r\n  \r\n  ngOnInit(): void {\r\n    this.loadFiles();\r\n  }\r\n\r\n  uploadFile(event: Event) {\r\n    const input = event.target as HTMLInputElement;\r\n    if (input.files && input.files.length) {\r\n      this.filesService.uploadFiles(input.files)\r\n        .subscribe(_ => this.loadFiles())\r\n    }\r\n  }\r\n\r\n  openFileChooser(fileInput: HTMLInputElement) {\r\n    fileInput.click();\r\n  }\r\n\r\n  loadFiles() {\r\n    this.filesService.getFiles()\r\n      .subscribe(files => {\r\n        this.files = files;\r\n      });\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}